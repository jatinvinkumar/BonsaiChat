{"ast":null,"code":"var _jsxFileName = \"/Users/jatinkumar/Downloads/BonsaiChat/src/ChatSection.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport './App.css';\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport ChatBanner from './ChatBanner';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { ArrowForwardIos, AttachFileTwoTone, EmojiEmotionsTwoTone, FreeBreakfastOutlined, Info } from '@material-ui/icons';\nimport { Button, Container, IconButton, Input, InputBase, Paper, Typography } from '@material-ui/core';\nimport { RemoveScrollBar } from 'react-remove-scroll-bar';\nimport { connect, useDispatch } from 'react-redux';\nimport { FirebaseContext } from \"./firebase/firebase\";\nimport { Widget, addResponseMessage, toggleWidget, dropMessages, addUserMessage, renderCustomComponent } from 'react-chat-widget';\nimport './Chat.css';\nimport Utility from './Utility';\nvar stateData;\nvar chatID;\nvar m = \"place\";\nvar pointer = 0;\nvar triggerN = \"\";\nvar message = \"\";\nvar showing = false;\nconst theme = {\n  background: '#f5f8fb',\n  fontFamily: 'Helvetica Neue',\n  headerBgColor: '#000000',\n  headerFontColor: '#fff',\n  headerFontSize: '15px',\n  botBubbleColor: '#EF6C00',\n  botFontColor: '#fff',\n  userBubbleColor: '#fff',\n  userFontColor: '#4a4a4a'\n};\n\nfunction loopThru(props) {\n  chatID = props.id;\n  console.log(\"lebron\", props, pointer);\n\n  if (props.data[chatID] && pointer < props.data[chatID].length) {\n    if (props.data[chatID][pointer].sender == \"user\") {\n      addUserMessage(props.data[chatID][pointer].data, pointer);\n    } else {\n      addResponseMessage(props.data[chatID][pointer].data, pointer);\n    }\n\n    pointer++;\n    loopThru(props);\n    console.log(\"pointer: \", pointer);\n  }\n\n  return;\n}\n\nfunction validateEmail(email) {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(email);\n} //return 0 for ok email\n\n\nfunction validate(email) {\n  if (validateEmail(email)) {\n    return true;\n  } else {\n    return false;\n  }\n\n  return false;\n}\n\nvar email = \"\";\n\nfunction ChatSection(props) {\n  if (!showing) {\n    toggleWidget();\n    showing = true;\n  }\n\n  const {\n    app,\n    api\n  } = useContext(FirebaseContext);\n  const dispatch = useDispatch();\n  const [email2, setEmail] = useState(\"\");\n\n  const inputChange = event => {\n    //setInput(event.target.value)\n    message = event.target.value;\n  };\n\n  const handleSend = () => {\n    if (message == \"\") {\n      return;\n    }\n\n    addUserMessage(message);\n    api.addMessage(pointer, chatID, message);\n    message = \"\";\n  };\n\n  const handleNewUserMessage = newMessage => {\n    console.log(`New message incoming! ${newMessage}`); // Now send the message throught the backend API\n  };\n\n  const handleChangeEmail = event => {\n    console.log(\"EVENTLOG: \", event.target.value);\n    email = event.target.value;\n  };\n\n  const handleEmailSubmit = () => {\n    console.log(\"submit pressed\");\n\n    if (validate(email)) {\n      console.log(\"email validated\");\n      api.setMetaData({\n        email: email\n      });\n      setEmail(email);\n    }\n  };\n\n  const Button2 = ({}) => /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '80%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Utility, {\n    color: props.data.themeColor,\n    style: {\n      backgroundColor: props.data.themeColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    component: \"form\",\n    style: {\n      boxShadow: \"0px 0px 1px #9999\",\n      width: '100%',\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Enter Email\",\n    inputProps: {\n      'aria-label': 'search google maps'\n    },\n    disableUnderline: true,\n    onChange: handleChangeEmail,\n    style: {\n      paddingLeft: 10,\n      width: '100%',\n      textAnchor: 'middle',\n      alignItems: 'center',\n      textAlign: 'center',\n      paddingTop: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleEmailSubmit,\n    style: {\n      height: '100%',\n      backgroundColor: props.data.themeColor,\n      height: 40,\n      width: 40,\n      borderRadius: 0,\n      borderTopRightRadius: 5,\n      borderBottomRightRadius: 5\n    },\n    type: \"submit\",\n    \"aria-label\": \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ArrowForwardIos, {\n    style: {\n      color: 'white',\n      margin: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 23\n    }\n  })))));\n\n  stateData = props.data;\n  dropMessages();\n  pointer = 0;\n  console.log(\"PropsCC: \", props);\n\n  if (!props.data.sessionMeta.email) {\n    addResponseMessage(\"Hi! Let's get to know each other. What's your name?\");\n    renderCustomComponent(Button2);\n  } else {\n    loopThru(props);\n  }\n\n  toggleWidget();\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      overflowY: 'scroll',\n      height: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    handleNewUserMessage: handleNewUserMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Container, {\n    style: {\n      bottom: 0,\n      width: \"100%\",\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    className: \"shadow\",\n    style: {\n      backgroundColor: 'white',\n      borderRadius: 8,\n      padding: 20,\n      boxShadow: '0 0 0 1px rgba(0,0,0,0.01)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"userInput\",\n    onChange: inputChange,\n    placeholder: \"Enter a description to help people find what they need\",\n    disableUnderline: \"true\",\n    style: {\n      fontSize: 12,\n      textAlign: \"left\"\n    },\n    fullWidth: \"true\",\n    inputProps: {\n      'aria-label': 'description',\n      disableUnderline: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(EmojiEmotionsTwoTone, {\n    style: {\n      color: \"#3599FF\",\n      marginRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(AttachFileTwoTone, {\n    style: {\n      color: \"#3599FF\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onSubmit: handleSend,\n    onClick: handleSend,\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 19\n    }\n  }, \"Send\")))));\n} //Recieve data from state\n\n\nconst mapStateToProps = (state, ownProps) => {\n  //let id = ownProps.match.params.post_id;\n  return {\n    data: state\n  };\n}; //To Send actions to state\n\n\nconst mapDispatchToProps = dispatch => {\n  return {//deletePost: (id) => dispatch(deletePost(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatSection);","map":{"version":3,"sources":["/Users/jatinkumar/Downloads/BonsaiChat/src/ChatSection.js"],"names":["React","useEffect","useState","useContext","ChatBot","ThemeProvider","ChatBanner","InfoIcon","ArrowForwardIos","AttachFileTwoTone","EmojiEmotionsTwoTone","FreeBreakfastOutlined","Info","Button","Container","IconButton","Input","InputBase","Paper","Typography","RemoveScrollBar","connect","useDispatch","FirebaseContext","Widget","addResponseMessage","toggleWidget","dropMessages","addUserMessage","renderCustomComponent","Utility","stateData","chatID","m","pointer","triggerN","message","showing","theme","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","loopThru","props","id","console","log","data","length","sender","validateEmail","email","re","test","validate","ChatSection","app","api","dispatch","email2","setEmail","inputChange","event","target","value","handleSend","addMessage","handleNewUserMessage","newMessage","handleChangeEmail","handleEmailSubmit","setMetaData","Button2","width","themeColor","backgroundColor","display","boxShadow","borderTopRightRadius","borderBottomRightRadius","paddingLeft","textAnchor","alignItems","textAlign","paddingTop","height","borderRadius","color","margin","sessionMeta","overflowY","bottom","padding","marginTop","fontSize","disableUnderline","marginRight","mapStateToProps","state","ownProps","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,UAApC,QAAoD,OAApD;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,eAAT,EAA0BC,iBAA1B,EAA6CC,oBAA7C,EAAmEC,qBAAnE,EAA0FC,IAA1F,QAAsG,oBAAtG;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,UAA5B,EAAwCC,KAAxC,EAA+CC,SAA/C,EAA0DC,KAA1D,EAAiEC,UAAjE,QAAmF,mBAAnF;AACA,SAAQC,eAAR,QAA8B,yBAA9B;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AAEA,SAASC,eAAT,QAAgC,qBAAhC;AAEA,SAASC,MAAT,EAAiBC,kBAAjB,EAAqCC,YAArC,EAAmDC,YAAnD,EAAiEC,cAAjE,EAAiFC,qBAAjF,QAA8G,mBAA9G;AACA,OAAO,YAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,IAAIC,SAAJ;AACA,IAAIC,MAAJ;AACA,IAAIC,CAAC,GAAG,OAAR;AACA,IAAIC,OAAO,GAAG,CAAd;AACA,IAAIC,QAAQ,GAAG,EAAf;AAEA,IAAIC,OAAO,GAAG,EAAd;AAEA,IAAIC,OAAO,GAAG,KAAd;AAGA,MAAMC,KAAK,GAAG;AACVC,EAAAA,UAAU,EAAE,SADF;AAEVC,EAAAA,UAAU,EAAE,gBAFF;AAGVC,EAAAA,aAAa,EAAE,SAHL;AAIVC,EAAAA,eAAe,EAAE,MAJP;AAKVC,EAAAA,cAAc,EAAE,MALN;AAMVC,EAAAA,cAAc,EAAE,SANN;AAOVC,EAAAA,YAAY,EAAE,MAPJ;AAQVC,EAAAA,eAAe,EAAE,MARP;AASVC,EAAAA,aAAa,EAAE;AATL,CAAd;;AAYA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AACtBjB,EAAAA,MAAM,GAAGiB,KAAK,CAACC,EAAf;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,KAAtB,EAA6Bf,OAA7B;;AACA,MAAGe,KAAK,CAACI,IAAN,CAAWrB,MAAX,KAAsBE,OAAO,GAAGe,KAAK,CAACI,IAAN,CAAWrB,MAAX,EAAmBsB,MAAtD,EAA6D;AAC3D,QAAGL,KAAK,CAACI,IAAN,CAAWrB,MAAX,EAAmBE,OAAnB,EAA4BqB,MAA5B,IAAsC,MAAzC,EAAgD;AAC9C3B,MAAAA,cAAc,CAACqB,KAAK,CAACI,IAAN,CAAWrB,MAAX,EAAmBE,OAAnB,EAA4BmB,IAA7B,EAAmCnB,OAAnC,CAAd;AACD,KAFD,MAEM;AACJT,MAAAA,kBAAkB,CAACwB,KAAK,CAACI,IAAN,CAAWrB,MAAX,EAAmBE,OAAnB,EAA4BmB,IAA7B,EAAmCnB,OAAnC,CAAlB;AACD;;AACDA,IAAAA,OAAO;AACPc,IAAAA,QAAQ,CAACC,KAAD,CAAR;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBlB,OAAzB;AACD;;AACD;AACD;;AAED,SAASsB,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAMC,EAAE,GAAG,2JAAX;AACA,SAAOA,EAAE,CAACC,IAAH,CAAQF,KAAR,CAAP;AACD,C,CAED;;;AACA,SAASG,QAAT,CAAkBH,KAAlB,EAAyB;AAEvB,MAAID,aAAa,CAACC,KAAD,CAAjB,EAA0B;AACxB,WAAO,IAAP;AACD,GAFD,MAEO;AACL,WAAO,KAAP;AACD;;AACD,SAAO,KAAP;AACD;;AAED,IAAIA,KAAK,GAAG,EAAZ;;AAEA,SAASI,WAAT,CAAqBZ,KAArB,EAA2B;AAEzB,MAAG,CAACZ,OAAJ,EAAY;AACVX,IAAAA,YAAY;AACZW,IAAAA,OAAO,GAAG,IAAV;AACD;;AAED,QAAM;AAAEyB,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAe5D,UAAU,CAACoB,eAAD,CAA/B;AACA,QAAMyC,QAAQ,GAAG1C,WAAW,EAA5B;AAEA,QAAM,CAAC2C,MAAD,EAASC,QAAT,IAAqBhE,QAAQ,CAAC,EAAD,CAAnC;;AAEA,QAAMiE,WAAW,GAAIC,KAAD,IAAW;AAC7B;AACAhC,IAAAA,OAAO,GAAGgC,KAAK,CAACC,MAAN,CAAaC,KAAvB;AACD,GAHD;;AAKA,QAAMC,UAAU,GAAG,MAAM;AACvB,QAAGnC,OAAO,IAAI,EAAd,EAAiB;AAAC;AAAO;;AACzBR,IAAAA,cAAc,CAACQ,OAAD,CAAd;AACA2B,IAAAA,GAAG,CAACS,UAAJ,CAAetC,OAAf,EAAwBF,MAAxB,EAAgCI,OAAhC;AACAA,IAAAA,OAAO,GAAG,EAAV;AACD,GALD;;AAOA,QAAMqC,oBAAoB,GAAIC,UAAD,IAAgB;AAC3CvB,IAAAA,OAAO,CAACC,GAAR,CAAa,yBAAwBsB,UAAW,EAAhD,EAD2C,CAE3C;AACD,GAHD;;AAKA,QAAMC,iBAAiB,GAAIP,KAAD,IAAW;AACnCjB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BgB,KAAK,CAACC,MAAN,CAAaC,KAAvC;AACAb,IAAAA,KAAK,GAAGW,KAAK,CAACC,MAAN,CAAaC,KAArB;AACD,GAHD;;AAKA,QAAMM,iBAAiB,GAAG,MAAM;AAC9BzB,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AACA,QAAGQ,QAAQ,CAACH,KAAD,CAAX,EAAmB;AACjBN,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAW,MAAAA,GAAG,CAACc,WAAJ,CAAgB;AAACpB,QAAAA,KAAK,EAAEA;AAAR,OAAhB;AACAS,MAAAA,QAAQ,CAACT,KAAD,CAAR;AACD;AACF,GAPD;;AAWA,QAAMqB,OAAO,GAAG,CAAC,EAAD,kBACd;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAC;AAAP,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE9B,KAAK,CAACI,IAAN,CAAW2B,UAA3B;AAAuC,IAAA,KAAK,EAAE;AAACC,MAAAA,eAAe,EAAEhC,KAAK,CAACI,IAAN,CAAW2B;AAA7B,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEU;AAAK,IAAA,KAAK,EAAE;AAACE,MAAAA,OAAO,EAAC;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,MAAjB;AAAwB,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE,mBAAb;AAAkCJ,MAAAA,KAAK,EAAC,MAAxC;AAAgDK,MAAAA,oBAAoB,EAAC,CAArE;AAAwEC,MAAAA,uBAAuB,EAAC;AAAhG,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,WAAW,EAAC,aADd;AAEE,IAAA,UAAU,EAAE;AAAE,oBAAc;AAAhB,KAFd;AAGE,IAAA,gBAAgB,EAAE,IAHpB;AAIE,IAAA,QAAQ,EAAEV,iBAJZ;AAKE,IAAA,KAAK,EAAE;AAACW,MAAAA,WAAW,EAAC,EAAb;AAAiBP,MAAAA,KAAK,EAAC,MAAvB;AAA+BQ,MAAAA,UAAU,EAAC,QAA1C;AAAoDC,MAAAA,UAAU,EAAC,QAA/D;AAAyEC,MAAAA,SAAS,EAAC,QAAnF;AAA6FC,MAAAA,UAAU,EAAC;AAAxG,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAWE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEd,iBAArB;AAAwC,IAAA,KAAK,EAAE;AAACe,MAAAA,MAAM,EAAC,MAAR;AAAgBV,MAAAA,eAAe,EAAChC,KAAK,CAACI,IAAN,CAAW2B,UAA3C;AAAuDW,MAAAA,MAAM,EAAC,EAA9D;AAAkEZ,MAAAA,KAAK,EAAC,EAAxE;AAA4Ea,MAAAA,YAAY,EAAC,CAAzF;AAA4FR,MAAAA,oBAAoB,EAAC,CAAjH;AAAoHC,MAAAA,uBAAuB,EAAC;AAA5I,KAA/C;AAA+L,IAAA,IAAI,EAAC,QAApM;AAA6M,kBAAW,QAAxN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAE;AAACQ,MAAAA,KAAK,EAAC,OAAP;AAAgBC,MAAAA,MAAM,EAAC;AAAvB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAXF,CAFV,CADF,CADF;;AAsBA/D,EAAAA,SAAS,GAAGkB,KAAK,CAACI,IAAlB;AACA1B,EAAAA,YAAY;AACZO,EAAAA,OAAO,GAAG,CAAV;AACAiB,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,KAAzB;;AACA,MAAG,CAACA,KAAK,CAACI,IAAN,CAAW0C,WAAX,CAAuBtC,KAA3B,EAAiC;AAC/BhC,IAAAA,kBAAkB,CAAC,qDAAD,CAAlB;AACAI,IAAAA,qBAAqB,CAACiD,OAAD,CAArB;AACD,GAHD,MAGO;AACL9B,IAAAA,QAAQ,CAACC,KAAD,CAAR;AACD;;AAIDvB,EAAAA,YAAY;AACV,sBACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEY,KAAtB;AAA6B,IAAA,KAAK,EAAE;AAACyC,MAAAA,KAAK,EAAC;AAAP,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAE;AAACA,MAAAA,KAAK,EAAC,MAAP;AAAeiB,MAAAA,SAAS,EAAC,QAAzB;AAAmCL,MAAAA,MAAM,EAAE;AAA3C,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,oBAAoB,EAAElB,oBADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADJ,eAMI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAGwB,MAAAA,MAAM,EAAC,CAAV;AAAalB,MAAAA,KAAK,EAAC,MAAnB;AAA2BmB,MAAAA,OAAO,EAAC;AAAnC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,QAArB;AAA8B,IAAA,KAAK,EAAE;AAACjB,MAAAA,eAAe,EAAE,OAAlB;AAA2BW,MAAAA,YAAY,EAAE,CAAzC;AAA4CM,MAAAA,OAAO,EAAE,EAArD;AAAyDf,MAAAA,SAAS,EAAE;AAApE,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAE;AAACD,MAAAA,OAAO,EAAC,MAAT;AAAiBM,MAAAA,UAAU,EAAC,QAA5B;AAAsCW,MAAAA,SAAS,EAAE;AAAjD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAE,WAAX;AAAwB,IAAA,QAAQ,EAAEhC,WAAlC;AAA+C,IAAA,WAAW,EAAC,wDAA3D;AAAoH,IAAA,gBAAgB,EAAC,MAArI;AAA4I,IAAA,KAAK,EAAE;AAACiC,MAAAA,QAAQ,EAAE,EAAX;AAAeX,MAAAA,SAAS,EAAE;AAA1B,KAAnJ;AAAuL,IAAA,SAAS,EAAC,MAAjM;AAAwM,IAAA,UAAU,EAAE;AAAE,oBAAc,aAAhB;AAA+BY,MAAAA,gBAAgB,EAAE;AAAjD,KAApN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAIE,oBAAC,oBAAD;AAAsB,IAAA,KAAK,EAAE;AAACR,MAAAA,KAAK,EAAE,SAAR;AAAoBS,MAAAA,WAAW,EAAE;AAAjC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAOE,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAE;AAACT,MAAAA,KAAK,EAAE;AAAR,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAQE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,QAAQ,EAAEtB,UAApC;AAAgD,IAAA,OAAO,EAAEA,UAAzD;AAAqE,IAAA,KAAK,EAAE,EAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,CADF,CADJ,CANJ,CADF;AAwBH,C,CAED;;;AACA,MAAMgC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C;AAEA,SAAO;AACLpD,IAAAA,IAAI,EAAEmD;AADD,GAAP;AAGD,CAND,C,CAQA;;;AACA,MAAME,kBAAkB,GAAI1C,QAAD,IAAc;AACvC,SAAO,CACL;AADK,GAAP;AAGD,CAJD;;AAMA,eAAe3C,OAAO,CAACkF,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C7C,WAA7C,CAAf","sourcesContent":["import React, {useEffect, useState, useContext}from 'react';\nimport './App.css';\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport ChatBanner from './ChatBanner';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { ArrowForwardIos, AttachFileTwoTone, EmojiEmotionsTwoTone, FreeBreakfastOutlined, Info } from '@material-ui/icons';\nimport { Button, Container, IconButton, Input, InputBase, Paper, Typography } from '@material-ui/core';\nimport {RemoveScrollBar} from 'react-remove-scroll-bar';\nimport { connect, useDispatch } from 'react-redux'\n\nimport { FirebaseContext } from \"./firebase/firebase\";\n\nimport { Widget, addResponseMessage, toggleWidget, dropMessages, addUserMessage, renderCustomComponent } from 'react-chat-widget';\nimport './Chat.css'; \nimport Utility from './Utility';\n\nvar stateData;\nvar chatID;\nvar m = \"place\";\nvar pointer = 0;\nvar triggerN = \"\"\n\nvar message = \"\";\n\nvar showing = false;\n\n\nconst theme = {\n    background: '#f5f8fb',\n    fontFamily: 'Helvetica Neue',\n    headerBgColor: '#000000',\n    headerFontColor: '#fff',\n    headerFontSize: '15px',\n    botBubbleColor: '#EF6C00',\n    botFontColor: '#fff',\n    userBubbleColor: '#fff',\n    userFontColor: '#4a4a4a',\n  };\n\nfunction loopThru(props){\n  chatID = props.id;\n  console.log(\"lebron\", props, pointer);\n  if(props.data[chatID] && pointer < props.data[chatID].length){\n    if(props.data[chatID][pointer].sender == \"user\"){\n      addUserMessage(props.data[chatID][pointer].data, pointer)\n    } else{\n      addResponseMessage(props.data[chatID][pointer].data, pointer)\n    }\n    pointer++\n    loopThru(props)\n    console.log(\"pointer: \", pointer)\n  }\n  return;\n}\n\nfunction validateEmail(email) {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(email);\n}\n\n//return 0 for ok email\nfunction validate(email) {\n\n  if (validateEmail(email)) {\n    return true\n  } else {\n    return false\n  }\n  return false;\n}\n\nvar email = \"\";\n\nfunction ChatSection(props){\n\n  if(!showing){\n    toggleWidget();\n    showing = true;\n  }\n\n  const { app, api } = useContext(FirebaseContext);\n  const dispatch = useDispatch();\n\n  const [email2, setEmail] = useState(\"\");\n\n  const inputChange = (event) => {\n    //setInput(event.target.value)\n    message = event.target.value;\n  };\n\n  const handleSend = () => {\n    if(message == \"\"){return} \n    addUserMessage(message);\n    api.addMessage(pointer, chatID, message)\n    message = \"\";\n  };\n  \n  const handleNewUserMessage = (newMessage) => {\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n  };\n\n  const handleChangeEmail = (event) => {\n    console.log(\"EVENTLOG: \", event.target.value)\n    email = event.target.value;\n  }\n\n  const handleEmailSubmit = () => {\n    console.log(\"submit pressed\");\n    if(validate(email)){\n      console.log(\"email validated\");\n      api.setMetaData({email: email});\n      setEmail(email)\n    }\n  }\n\n\n\n  const Button2 = ({ }) => \n    <div style={{width:'80%',}}>\n      <Utility color={props.data.themeColor} style={{backgroundColor: props.data.themeColor}} >\n      {/* <Typography variant={\"subtitle1\"} style={{color:\"black\", paddingBottom:10}}><b>Stay in touch</b></Typography> */}\n                <div style={{display:'flex'}}>\n                  <Paper component=\"form\" style={{ boxShadow: \"0px 0px 1px #9999\", width:'100%', borderTopRightRadius:0, borderBottomRightRadius:0}}>\n                    <Input\n                      placeholder=\"Enter Email\"\n                      inputProps={{ 'aria-label': 'search google maps' }}\n                      disableUnderline={true}\n                      onChange={handleChangeEmail}\n                      style={{paddingLeft:10, width:'100%', textAnchor:'middle', alignItems:'center', textAlign:'center', paddingTop:5}}\n                    />\n                  </Paper>\n\n                  <IconButton onClick={handleEmailSubmit} style={{height:'100%', backgroundColor:props.data.themeColor, height:40, width:40, borderRadius:0, borderTopRightRadius:5, borderBottomRightRadius:5}} type=\"submit\" aria-label=\"search\">\n                      <ArrowForwardIos style={{color:'white', margin:'auto'}}/>\n                  </IconButton>\n                </div>\n      </Utility>\n    </div>\n\n  stateData = props.data;\n  dropMessages()\n  pointer = 0;\n  console.log(\"PropsCC: \", props)\n  if(!props.data.sessionMeta.email){\n    addResponseMessage(\"Hi! Let's get to know each other. What's your name?\")\n    renderCustomComponent(Button2)\n  } else {\n    loopThru(props);\n  }\n  \n  \n\n  toggleWidget()\n    return(\n      <ThemeProvider theme={theme} style={{width:'100%'}}>\n          <div style={{width:'100%', overflowY:'scroll', height: 400}}>\n            <Widget\n              handleNewUserMessage={handleNewUserMessage}\n            />\n          </div>\n          <Container style={{  bottom:0, width:\"100%\", padding:10}}>\n              <Container className=\"shadow\" style={{backgroundColor: 'white', borderRadius: 8, padding: 20, boxShadow: '0 0 0 1px rgba(0,0,0,0.01)'}}>\n                <div style={{display:'flex', alignItems:'center', marginTop: 20, }}>\n                <Input id={\"userInput\"} onChange={inputChange} placeholder=\"Enter a description to help people find what they need\" disableUnderline='true' style={{fontSize: 12, textAlign: \"left\",}} fullWidth=\"true\" inputProps={{ 'aria-label': 'description', disableUnderline: true }} />\n                  {/* <MenuBookTwoTone style={{color: \"#3599FF\", marginRight: 10}}/> */}\n                  {/* <PostAddTwoTone style={{color: \"#3599FF\",  marginRight: 10}}/> */}\n                  <EmojiEmotionsTwoTone style={{color: \"#3599FF\",  marginRight: 10}}/>\n                  {/* <Gif style={{color: \"#3599FF\",  marginRight: 10}}/> */}\n                  {/* <InsertPhotoTwoTone style={{color: \"#3599FF\",  marginRight: 10}}/> */}\n                  <AttachFileTwoTone style={{color: \"#3599FF\"}}/>\n                  <Button variant=\"primary\" onSubmit={handleSend} onClick={handleSend} style={{}}>Send</Button>\n                </div>\n              </Container>\n          </Container>\n      </ThemeProvider>\n  )\n  \n}\n\n//Recieve data from state\nconst mapStateToProps = (state, ownProps) => {\n  //let id = ownProps.match.params.post_id;\n  \n  return {\n    data: state\n  }\n}\n\n//To Send actions to state\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    //deletePost: (id) => dispatch(deletePost(id))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatSection);\n"]},"metadata":{},"sourceType":"module"}