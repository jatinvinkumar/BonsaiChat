{"ast":null,"code":"var _jsxFileName = \"/Users/jatinkumar/Downloads/BonsaiChat/src/ChatSection.js\";\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport ChatBanner from './ChatBanner';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { FreeBreakfastOutlined, Info } from '@material-ui/icons';\nimport { Typography } from '@material-ui/core';\nimport styles from './Chat.css';\nimport { RemoveScrollBar } from 'react-remove-scroll-bar';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nvar stateData;\nvar chatID;\nvar m = \"place\";\nvar pointer = 0;\nvar triggerN = \"\"; //the Trigger\n\nfunction Loader(props) {\n  if (stateData != null && chatID != null && stateData[chatID]) {\n    if (pointer < stateData[chatID].length) {\n      m = stateData[chatID][0];\n      pointer++;\n      triggerN = \"message\";\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }\n  });\n}\n\nconst steps = [{\n  id: '1',\n  component: /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }\n  }),\n  trigger: true\n}, {\n  id: 'message',\n  message: m,\n  trigger: '1'\n}];\nconst theme = {\n  background: '#f5f8fb',\n  fontFamily: 'Helvetica Neue',\n  headerBgColor: '#000000',\n  headerFontColor: '#fff',\n  headerFontSize: '15px',\n  botBubbleColor: '#EF6C00',\n  botFontColor: '#fff',\n  userBubbleColor: '#fff',\n  userFontColor: '#4a4a4a'\n};\n\nfunction ChatSection(props) {\n  stateData = props.data;\n  chatID = props.id;\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ChatBot, {\n    hideHeader: true,\n    steps: steps,\n    customStyle: {\n      backgroundColor: 'transparent',\n      'boxShadow': 'none'\n    },\n    contentStyle: {\n      height: props.height,\n      backgroundColor: 'transparent'\n    },\n    style: {\n      backgroundColor: 'transparent'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }));\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  //let id = ownProps.match.params.post_id;\n  console.log(\"chatSection\", state);\n  return {\n    data: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {//deletePost: (id) => dispatch(deletePost(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatSection);","map":{"version":3,"sources":["/Users/jatinkumar/Downloads/BonsaiChat/src/ChatSection.js"],"names":["React","useEffect","useState","ChatBot","ThemeProvider","ChatBanner","InfoIcon","FreeBreakfastOutlined","Info","Typography","styles","RemoveScrollBar","connect","Redirect","stateData","chatID","m","pointer","triggerN","Loader","props","length","steps","id","component","trigger","message","theme","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","ChatSection","data","backgroundColor","height","mapStateToProps","state","ownProps","console","log","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useEffect, useState}from 'react';\nimport './App.css';\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport ChatBanner from './ChatBanner';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { FreeBreakfastOutlined, Info } from '@material-ui/icons';\nimport { Typography } from '@material-ui/core';\nimport styles from './Chat.css'; \nimport {RemoveScrollBar} from 'react-remove-scroll-bar';\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom';\n\nvar stateData;\nvar chatID;\nvar m = \"place\";\nvar pointer = 0;\nvar triggerN = \"\"\n\n//the Trigger\nfunction Loader(props){\n\n  if(stateData != null && chatID != null &&  stateData[chatID]){\n    if(pointer < stateData[chatID].length){\n      m = stateData[chatID][0]\n      pointer++;\n      triggerN = \"message\"\n    }\n    return(<div/>)\n  }\n  return(<div/>)\n}\n\nconst steps = [\n  {\n    id: '1',\n    component: <Loader/>,\n    trigger: true\n  },\n  {\n    id: 'message',\n    message: m,\n    trigger: '1'\n  }\n]\n\nconst theme = {\n    background: '#f5f8fb',\n    fontFamily: 'Helvetica Neue',\n    headerBgColor: '#000000',\n    headerFontColor: '#fff',\n    headerFontSize: '15px',\n    botBubbleColor: '#EF6C00',\n    botFontColor: '#fff',\n    userBubbleColor: '#fff',\n    userFontColor: '#4a4a4a',\n  };\n\nfunction ChatSection(props){\n  \n  stateData = props.data;\n  chatID = props.id;\n  return(\n      <ThemeProvider theme={theme}>\n          <ChatBot hideHeader={true} steps={steps} customStyle={{backgroundColor:'transparent', 'boxShadow': 'none'}} contentStyle={{height: props.height, backgroundColor:'transparent', }} style={{backgroundColor:'transparent'}} />\n      </ThemeProvider>\n  )\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  //let id = ownProps.match.params.post_id;\n  console.log(\"chatSection\", state);\n  return {\n    data: state\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    //deletePost: (id) => dispatch(deletePost(id))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatSection);\n"]},"metadata":{},"sourceType":"module"}