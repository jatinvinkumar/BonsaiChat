{"ast":null,"code":"var _jsxFileName = \"/Users/pritivirajkumar/Downloads/BonsaiChat/src/Chat.js\";\nimport React from 'react';\nimport './App.css';\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport ChatBanner from './ChatBanner';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { Info } from '@material-ui/icons';\nimport { Typography } from '@material-ui/core';\nimport styles from './Chat.css';\nimport { RemoveScrollBar } from 'react-remove-scroll-bar';\nconst steps = [{\n  id: '1',\n  message: 'What is your name?',\n  trigger: 'name'\n}, {\n  id: 'name',\n  user: true,\n  trigger: '3'\n}, {\n  id: '3',\n  message: 'Hi {previousValue}! What is your gender?',\n  trigger: 'gender'\n}, {\n  id: 'gender',\n  options: [{\n    value: 'male',\n    label: 'Male',\n    trigger: '5'\n  }, {\n    value: 'female',\n    label: 'Female',\n    trigger: '5'\n  }]\n}, {\n  id: '5',\n  message: 'How old are you?',\n  trigger: 'age'\n}, {\n  id: 'age',\n  user: true,\n  trigger: '7',\n  validator: value => {\n    if (isNaN(value)) {\n      return 'value must be a number';\n    } else if (value < 0) {\n      return 'value must be positive';\n    } else if (value > 120) {\n      return `${value}? Come on!`;\n    }\n\n    return true;\n  }\n}, {\n  id: '7',\n  message: 'Great! Check out your summary',\n  trigger: 'review'\n}, {\n  id: 'review',\n  component: /*#__PURE__*/React.createElement(Review, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }\n  }),\n  asMessage: true,\n  trigger: 'update'\n}, {\n  id: 'update',\n  message: 'Would you like to update some field?',\n  trigger: 'update-question'\n}, {\n  id: 'update-question',\n  options: [{\n    value: 'yes',\n    label: 'Yes',\n    trigger: 'update-yes'\n  }, {\n    value: 'no',\n    label: 'No',\n    trigger: 'end-message'\n  }]\n}, {\n  id: 'update-yes',\n  message: 'What field would you like to update?',\n  trigger: 'update-fields'\n}, {\n  id: 'update-fields',\n  options: [{\n    value: 'name',\n    label: 'Name',\n    trigger: 'update-name'\n  }, {\n    value: 'gender',\n    label: 'Gender',\n    trigger: 'update-gender'\n  }, {\n    value: 'age',\n    label: 'Age',\n    trigger: 'update-age'\n  }]\n}, {\n  id: 'update-name',\n  update: 'name',\n  trigger: '7'\n}, {\n  id: 'update-gender',\n  update: 'gender',\n  trigger: '7'\n}, {\n  id: 'update-age',\n  update: 'age',\n  trigger: '7'\n}, {\n  id: 'end-message',\n  message: 'Thanks! Your data was submitted successfully!',\n  end: true\n}];\nconst theme = {\n  background: '#f5f8fb',\n  fontFamily: 'Helvetica Neue',\n  headerBgColor: '#000000',\n  headerFontColor: '#fff',\n  headerFontSize: '15px',\n  botBubbleColor: '#EF6C00',\n  botFontColor: '#fff',\n  userBubbleColor: '#fff',\n  userFontColor: '#4a4a4a'\n};\nvar isScrolling;\nexport default class Chat extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      height: 225,\n      yDiff: 0\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.resizeHeaderOnScroll.bind(this));\n  }\n\n  resizeHeaderOnScroll() {\n    const distanceY = window.pageYOffset || document.documentElement.scrollTop;\n    console.log(distanceY);\n\n    if (distanceY >= 85) {\n      this.setState({\n        height: 225 - 70,\n        collapsed: true\n      });\n    } else {\n      this.setState({\n        height: 225 - distanceY,\n        yDiff: distanceY,\n        collapsed: false\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ChatBanner, {\n      id: \"header\",\n      height: this.state.height,\n      style: {\n        backgroundColor: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ChatBot, {\n      hideHeader: true,\n      steps: steps,\n      customStyle: {\n        backgroundColor: 'transparent',\n        'boxShadow': 'none'\n      },\n      contentStyle: {\n        height: window.innerHeight - this.state.height - 50 + this.state.yDiff\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/pritivirajkumar/Downloads/BonsaiChat/src/Chat.js"],"names":["React","ChatBot","ThemeProvider","ChatBanner","InfoIcon","Info","Typography","styles","RemoveScrollBar","steps","id","message","trigger","user","options","value","label","validator","isNaN","component","asMessage","update","end","theme","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","isScrolling","Chat","Component","constructor","props","state","height","yDiff","componentDidMount","window","addEventListener","resizeHeaderOnScroll","bind","distanceY","pageYOffset","document","documentElement","scrollTop","console","log","setState","collapsed","render","backgroundColor","innerHeight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport ChatBanner from './ChatBanner';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { Info } from '@material-ui/icons';\nimport { Typography } from '@material-ui/core';\nimport styles from './Chat.css'; \nimport {RemoveScrollBar} from 'react-remove-scroll-bar';\n\nconst steps = [\n  {\n    id: '1',\n    message: 'What is your name?',\n    trigger: 'name',\n  },\n  {\n    id: 'name',\n    user: true,\n    trigger: '3',\n  },\n  {\n    id: '3',\n    message: 'Hi {previousValue}! What is your gender?',\n    trigger: 'gender',\n  },\n  {\n    id: 'gender',\n    options: [\n      { value: 'male', label: 'Male', trigger: '5' },\n      { value: 'female', label: 'Female', trigger: '5' },\n    ],\n  },\n  {\n    id: '5',\n    message: 'How old are you?',\n    trigger: 'age',\n  },\n  {\n    id: 'age',\n    user: true,\n    trigger: '7',\n    validator: (value) => {\n      if (isNaN(value)) {\n        return 'value must be a number';\n      } else if (value < 0) {\n        return 'value must be positive';\n      } else if (value > 120) {\n        return `${value}? Come on!`;\n      }\n\n      return true;\n    },\n  },\n  {\n    id: '7',\n    message: 'Great! Check out your summary',\n    trigger: 'review',\n  },\n  {\n    id: 'review',\n    component: <Review />,\n    asMessage: true,\n    trigger: 'update',\n  },\n  {\n    id: 'update',\n    message: 'Would you like to update some field?',\n    trigger: 'update-question',\n  },\n  {\n    id: 'update-question',\n    options: [\n      { value: 'yes', label: 'Yes', trigger: 'update-yes' },\n      { value: 'no', label: 'No', trigger: 'end-message' },\n    ],\n  },\n  {\n    id: 'update-yes',\n    message: 'What field would you like to update?',\n    trigger: 'update-fields',\n  },\n  {\n    id: 'update-fields',\n    options: [\n      { value: 'name', label: 'Name', trigger: 'update-name' },\n      { value: 'gender', label: 'Gender', trigger: 'update-gender' },\n      { value: 'age', label: 'Age', trigger: 'update-age' },\n    ],\n  },\n  {\n    id: 'update-name',\n    update: 'name',\n    trigger: '7',\n  },\n  {\n    id: 'update-gender',\n    update: 'gender',\n    trigger: '7',\n  },\n  {\n    id: 'update-age',\n    update: 'age',\n    trigger: '7',\n  },\n  {\n    id: 'end-message',\n    message: 'Thanks! Your data was submitted successfully!',\n    end: true,\n  },\n]\n\nconst theme = {\n  background: '#f5f8fb',\n  fontFamily: 'Helvetica Neue',\n  headerBgColor: '#000000',\n  headerFontColor: '#fff',\n  headerFontSize: '15px',\n  botBubbleColor: '#EF6C00',\n  botFontColor: '#fff',\n  userBubbleColor: '#fff',\n  userFontColor: '#4a4a4a',\n};\n\nvar isScrolling;\n\nexport default class Chat extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {height: 225, yDiff: 0};\n  }\n  \n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.resizeHeaderOnScroll.bind(this));\n  }\n  \n  resizeHeaderOnScroll() {\n    \n    const distanceY = window.pageYOffset || document.documentElement.scrollTop\n\n    console.log(distanceY);\n     if (distanceY >= 85) {\n        this.setState({height: 225-70, collapsed: true});\n     } else {\n        this.setState({height: 225 - distanceY, yDiff: distanceY, collapsed: false});\n     }\n  }\n\n  render(){\n      return(\n        <div className=\"container1\">\n              <ChatBanner id=\"header\" height={this.state.height} style={{backgroundColor:\"black\",}} />\n              <ThemeProvider theme={theme}>\n                <ChatBot hideHeader={true} steps={steps} customStyle={{backgroundColor:'transparent', 'boxShadow': 'none'}} contentStyle={{height: (window.innerHeight - this.state.height - 50) + this.state.yDiff}} />\n              </ThemeProvider>\n        </div>\n      )\n  }\n\n}"]},"metadata":{},"sourceType":"module"}