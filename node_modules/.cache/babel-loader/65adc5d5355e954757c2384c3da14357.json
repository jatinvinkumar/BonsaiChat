{"ast":null,"code":"var _jsxFileName = \"/Users/pritivirajkumar/Downloads/BonsaiChat/src/Chat.js\";\nimport React from 'react';\nimport './App.css';\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport ChatBanner from './ChatBanner';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { Info } from '@material-ui/icons';\nimport { Typography } from '@material-ui/core';\nimport styles from './Chat.css';\nimport { RemoveScrollBar } from 'react-remove-scroll-bar';\nvar name = \"\";\n\nclass Connecting extends React.Component {\n  componentWillMount() {\n    const {\n      steps\n    } = this.props;\n    const name = steps.name.value; //Assign a random agent to this person\n\n    console.log(name);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nconst steps = [{\n  id: '1',\n  message: 'Welcome to Bonsai!',\n  trigger: '2'\n}, {\n  id: '2',\n  message: 'Would you like to look at our support articles or speak with an agent?',\n  trigger: '3'\n}, {\n  id: '3',\n  options: [{\n    value: 'Articles',\n    label: 'Articles',\n    trigger: '4'\n  }, {\n    value: 'Agent',\n    label: 'Agent',\n    trigger: '4'\n  }]\n}, {\n  id: '4',\n  message: 'Please enter your full name.',\n  trigger: '5'\n}, {\n  id: 'name',\n  user: true,\n  trigger: '6'\n}, {\n  id: '6',\n  component: /*#__PURE__*/React.createElement(Connecting, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 16\n    }\n  }),\n  waitAction: true\n}];\nconst theme = {\n  background: '#f5f8fb',\n  fontFamily: 'Helvetica Neue',\n  headerBgColor: '#000000',\n  headerFontColor: '#fff',\n  headerFontSize: '15px',\n  botBubbleColor: '#EF6C00',\n  botFontColor: '#fff',\n  userBubbleColor: '#fff',\n  userFontColor: '#4a4a4a'\n};\nvar isScrolling;\nexport default class Chat extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      height: 225,\n      yDiff: 0\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.resizeHeaderOnScroll.bind(this));\n  }\n\n  resizeHeaderOnScroll() {\n    const distanceY = window.pageYOffset || document.documentElement.scrollTop;\n    console.log(distanceY);\n\n    if (distanceY >= 85) {\n      this.setState({\n        height: 225 - 70,\n        collapsed: true\n      });\n    } else {\n      this.setState({\n        height: 225 - distanceY,\n        yDiff: distanceY,\n        collapsed: false\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ChatBanner, {\n      id: \"header\",\n      height: this.state.height,\n      style: {\n        backgroundColor: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ChatBot, {\n      hideHeader: true,\n      steps: steps,\n      customStyle: {\n        backgroundColor: 'transparent',\n        'boxShadow': 'none'\n      },\n      contentStyle: {\n        height: window.innerHeight - this.state.height - 50 + this.state.yDiff\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/pritivirajkumar/Downloads/BonsaiChat/src/Chat.js"],"names":["React","ChatBot","ThemeProvider","ChatBanner","InfoIcon","Info","Typography","styles","RemoveScrollBar","name","Connecting","Component","componentWillMount","steps","props","value","console","log","render","id","message","trigger","options","label","user","component","waitAction","theme","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","isScrolling","Chat","constructor","state","height","yDiff","componentDidMount","window","addEventListener","resizeHeaderOnScroll","bind","distanceY","pageYOffset","document","documentElement","scrollTop","setState","collapsed","backgroundColor","innerHeight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport ChatBanner from './ChatBanner';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { Info } from '@material-ui/icons';\nimport { Typography } from '@material-ui/core';\nimport styles from './Chat.css'; \nimport {RemoveScrollBar} from 'react-remove-scroll-bar';\n\nvar name = \"\";\n\nclass Connecting extends React.Component {\n  componentWillMount () {\n    const { steps } = this.props;\n    const name = steps.name.value;\n\n    //Assign a random agent to this person\n    console.log(name)\n\n  }\n  render() {\n    return (<div></div>)\n  }\n}\n\nconst steps = [\n  {\n    id: '1',\n    message: 'Welcome to Bonsai!',\n    trigger: '2',\n  },\n  {\n    id: '2',\n    message: 'Would you like to look at our support articles or speak with an agent?',\n    trigger: '3'\n  },\n  {\n    id: '3',\n    options: [\n      { value: 'Articles', label: 'Articles', trigger: '4' },\n      { value: 'Agent', label: 'Agent', trigger: '4' },\n    ],\n  },\n  {\n    id: '4',\n    message: 'Please enter your full name.',\n    trigger: '5'\n  },\n  {\n    id: 'name',\n    user: true,\n    trigger: '6',\n  },\n  {\n    id: '6',\n    component: <Connecting />,\n    waitAction: true,\n  },\n\n]\n\n\n\nconst theme = {\n  background: '#f5f8fb',\n  fontFamily: 'Helvetica Neue',\n  headerBgColor: '#000000',\n  headerFontColor: '#fff',\n  headerFontSize: '15px',\n  botBubbleColor: '#EF6C00',\n  botFontColor: '#fff',\n  userBubbleColor: '#fff',\n  userFontColor: '#4a4a4a',\n};\n\nvar isScrolling;\n\nexport default class Chat extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {height: 225, yDiff: 0};\n  }\n  \n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.resizeHeaderOnScroll.bind(this));\n  }\n  \n  resizeHeaderOnScroll() {\n    \n    const distanceY = window.pageYOffset || document.documentElement.scrollTop\n\n    console.log(distanceY);\n     if (distanceY >= 85) {\n        this.setState({height: 225-70, collapsed: true});\n     } else {\n        this.setState({height: 225 - distanceY, yDiff: distanceY, collapsed: false});\n     }\n  }\n\n  render(){\n      return(\n        <div className=\"container1\">\n              <ChatBanner id=\"header\" height={this.state.height} style={{backgroundColor:\"black\",}} />\n              <ThemeProvider theme={theme}>\n                <ChatBot hideHeader={true} steps={steps} customStyle={{backgroundColor:'transparent', 'boxShadow': 'none'}} contentStyle={{height: (window.innerHeight - this.state.height - 50) + this.state.yDiff}} />\n              </ThemeProvider>\n        </div>\n      )\n  }\n\n}"]},"metadata":{},"sourceType":"module"}