{"ast":null,"code":"var _jsxFileName = \"/Users/jatinkumar/Downloads/BonsaiChat/src/Chat.js\";\nimport React from 'react';\nimport './App.css';\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport ChatBanner from './ChatBanner';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { Info } from '@material-ui/icons';\nimport { Typography } from '@material-ui/core';\nconst steps = [{\n  id: '0',\n  component: /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      direction: 'row',\n      verticalAlign: 'middle',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InfoIcon, {\n    style: {\n      fontSize: 30,\n      opacity: 0.6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    style: {\n      opacity: 0.8,\n      paddingLeft: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, \"Live support is available Monday - Friday, 9 am-6 pm CST.\")),\n  trigger: '1'\n}, {\n  id: '1',\n  message: 'Welcome to Bonsai!',\n  trigger: '2'\n}, {\n  id: '2',\n  message: 'What service what !',\n  trigger: '3'\n}, {\n  id: '3',\n  options: [{\n    value: 1,\n    label: 'Number 1',\n    trigger: '1'\n  }, {\n    value: 2,\n    label: 'Number 2',\n    trigger: '1'\n  }, {\n    value: 3,\n    label: 'Number 3',\n    trigger: '1'\n  }]\n}];\nconst theme = {\n  background: '#f5f8fb',\n  fontFamily: 'Helvetica Neue',\n  headerBgColor: '#000000',\n  headerFontColor: '#fff',\n  headerFontSize: '15px',\n  botBubbleColor: '#EF6C00',\n  botFontColor: '#fff',\n  userBubbleColor: '#fff',\n  userFontColor: '#4a4a4a'\n};\nexport default class Chat extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      height: 200\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.resizeHeaderOnScroll);\n  }\n\n  resizeHeaderOnScroll() {\n    const distanceY = window.pageYOffset || document.documentElement.scrollTop,\n          shrinkOn = 200,\n          headerEl = document.getElementById(\"header\");\n\n    if (distanceY > shrinkOn) {\n      this.setState(height, 0);\n    } else {\n      this.setState(height, 200);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ChatBanner, {\n      id: \"header\",\n      style: {\n        backgroundColor: \"black\",\n        height: this.state.height\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ChatBot, {\n      customStyle: {\n        backgroundColor: 'transparent',\n        'box-shadow': 'none'\n      },\n      hideHeader: true,\n      enableSmoothScrolling: true,\n      bubbleOptionStyle: {\n        backgroundColor: 'transparent',\n        color: 'orange',\n        borderWidth: 100,\n        borderColor: 'black'\n      },\n      contentStyle: {\n        height: 400\n      },\n      steps: steps,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/jatinkumar/Downloads/BonsaiChat/src/Chat.js"],"names":["React","ChatBot","ThemeProvider","ChatBanner","InfoIcon","Info","Typography","steps","id","component","display","direction","verticalAlign","alignItems","fontSize","opacity","paddingLeft","trigger","message","options","value","label","theme","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","Chat","Component","state","height","componentDidMount","window","addEventListener","resizeHeaderOnScroll","distanceY","pageYOffset","document","documentElement","scrollTop","shrinkOn","headerEl","getElementById","setState","render","backgroundColor","color","borderWidth","borderColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport ChatBanner from './ChatBanner';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { Info } from '@material-ui/icons';\nimport { Typography } from '@material-ui/core';\n\nconst steps = [\n  {\n    id: '0',\n    component: (\n      <div style={{display:'flex', direction:'row', verticalAlign:'middle', alignItems: 'center'}}>\n        <InfoIcon style={{fontSize: 30, opacity: 0.6}}/>\n        <Typography variant={\"caption\"} style={{ opacity:0.8, paddingLeft: 10}}>Live support is available Monday - Friday, 9 am-6 pm CST.</Typography>\n      </div>\n    ),\n    trigger: '1'\n  },\n  {\n    id: '1',\n    message: 'Welcome to Bonsai!',\n    trigger: '2',\n  },\n  {\n    id: '2',\n    message: 'What service what !',\n    trigger: '3'\n  },\n  {\n    id: '3',\n    options: [\n      { value: 1, label: 'Number 1', trigger: '1' },\n      { value: 2, label: 'Number 2', trigger: '1' },\n      { value: 3, label: 'Number 3', trigger: '1' },\n    ],\n  },\n];\n\nconst theme = {\n  background: '#f5f8fb',\n  fontFamily: 'Helvetica Neue',\n  headerBgColor: '#000000',\n  headerFontColor: '#fff',\n  headerFontSize: '15px',\n  botBubbleColor: '#EF6C00',\n  botFontColor: '#fff',\n  userBubbleColor: '#fff',\n  userFontColor: '#4a4a4a',\n};\n\nexport default class Chat extends React.Component{\n\n  // Required step: always call the parent class' constructor\n\n  // Set the state directly. Use props if necessary.\n  state = {\n    height: 200,\n  }\n  \n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.resizeHeaderOnScroll);\n  }\n  resizeHeaderOnScroll() {\n    const distanceY = window.pageYOffset || document.documentElement.scrollTop,\n      shrinkOn = 200,\n      headerEl = document.getElementById(\"header\");\n\n    if (distanceY > shrinkOn) {\n      this.setState(height, 0);\n    } else {\n      this.setState(height, 200);\n    }\n  }\n\n  render(){\n      return(\n          <>\n              <ChatBanner id=\"header\" style={{backgroundColor:\"black\", height: this.state.height}} />\n              <ThemeProvider theme={theme}>\n                  <ChatBot customStyle={{backgroundColor:'transparent', 'box-shadow': 'none' }} hideHeader={true} enableSmoothScrolling={true} bubbleOptionStyle={{backgroundColor:'transparent', color: 'orange', borderWidth: 100, borderColor: 'black' }} contentStyle={{height:400}} steps={steps} />\n              </ThemeProvider>\n              \n          </>\n      )\n  }\n\n}"]},"metadata":{},"sourceType":"module"}