{"ast":null,"code":"var _jsxFileName = \"/Users/jatinkumar/Downloads/BonsaiChat/src/ChatSection.js\";\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport ChatBanner from './ChatBanner';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { FreeBreakfastOutlined, Info } from '@material-ui/icons';\nimport { Typography } from '@material-ui/core';\nimport { RemoveScrollBar } from 'react-remove-scroll-bar';\nimport { connect } from 'react-redux';\nimport { Widget, addResponseMessage, toggleWidget } from 'react-chat-widget';\nimport 'react-chat-widget/lib/styles.css';\nimport styles from './Chat.css';\nvar stateData;\nvar chatID;\nvar m = \"place\";\nvar pointer = 0;\nvar triggerN = \"\";\nconst theme = {\n  background: '#f5f8fb',\n  fontFamily: 'Helvetica Neue',\n  headerBgColor: '#000000',\n  headerFontColor: '#fff',\n  headerFontSize: '15px',\n  botBubbleColor: '#EF6C00',\n  botFontColor: '#fff',\n  userBubbleColor: '#fff',\n  userFontColor: '#4a4a4a'\n};\n\nfunction loopThru(props) {\n  chatID = props.id;\n  console.log(\"lebron\", props);\n\n  if (props.data[chatID] && pointer < props.data[chatID].length) {\n    addResponseMessage(props.data[chatID][pointer].data);\n    pointer++;\n    loopThru(props);\n  }\n}\n\nfunction ChatSection(props) {\n  const handleNewUserMessage = newMessage => {\n    console.log(`New message incoming! ${newMessage}`); // Now send the message throught the backend API\n  };\n\n  stateData = props.data;\n  loopThru(props);\n  toggleWidget();\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    handleNewUserMessage: handleNewUserMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }));\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  //let id = ownProps.match.params.post_id;\n  return {\n    data: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {//deletePost: (id) => dispatch(deletePost(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatSection);","map":{"version":3,"sources":["/Users/jatinkumar/Downloads/BonsaiChat/src/ChatSection.js"],"names":["React","useEffect","useState","ChatBot","ThemeProvider","ChatBanner","InfoIcon","FreeBreakfastOutlined","Info","Typography","RemoveScrollBar","connect","Widget","addResponseMessage","toggleWidget","styles","stateData","chatID","m","pointer","triggerN","theme","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","loopThru","props","id","console","log","data","length","ChatSection","handleNewUserMessage","newMessage","mapStateToProps","state","ownProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAwC,OAAxC;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,qBAAT,EAAgCC,IAAhC,QAA4C,oBAA5C;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAAQC,eAAR,QAA8B,yBAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,MAAT,EAAiBC,kBAAjB,EAAqCC,YAArC,QAAyD,mBAAzD;AACA,OAAO,kCAAP;AACA,OAAOC,MAAP,MAAmB,YAAnB;AAEA,IAAIC,SAAJ;AACA,IAAIC,MAAJ;AACA,IAAIC,CAAC,GAAG,OAAR;AACA,IAAIC,OAAO,GAAG,CAAd;AACA,IAAIC,QAAQ,GAAG,EAAf;AAGA,MAAMC,KAAK,GAAG;AACVC,EAAAA,UAAU,EAAE,SADF;AAEVC,EAAAA,UAAU,EAAE,gBAFF;AAGVC,EAAAA,aAAa,EAAE,SAHL;AAIVC,EAAAA,eAAe,EAAE,MAJP;AAKVC,EAAAA,cAAc,EAAE,MALN;AAMVC,EAAAA,cAAc,EAAE,SANN;AAOVC,EAAAA,YAAY,EAAE,MAPJ;AAQVC,EAAAA,eAAe,EAAE,MARP;AASVC,EAAAA,aAAa,EAAE;AATL,CAAd;;AAYA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AACtBf,EAAAA,MAAM,GAAGe,KAAK,CAACC,EAAf;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,KAAtB;;AACA,MAAGA,KAAK,CAACI,IAAN,CAAWnB,MAAX,KAAsBE,OAAO,GAAGa,KAAK,CAACI,IAAN,CAAWnB,MAAX,EAAmBoB,MAAtD,EAA6D;AAC3DxB,IAAAA,kBAAkB,CAACmB,KAAK,CAACI,IAAN,CAAWnB,MAAX,EAAmBE,OAAnB,EAA4BiB,IAA7B,CAAlB;AACAjB,IAAAA,OAAO;AACPY,IAAAA,QAAQ,CAACC,KAAD,CAAR;AACD;AACF;;AAED,SAASM,WAAT,CAAqBN,KAArB,EAA2B;AAEzB,QAAMO,oBAAoB,GAAIC,UAAD,IAAgB;AAC3CN,IAAAA,OAAO,CAACC,GAAR,CAAa,yBAAwBK,UAAW,EAAhD,EAD2C,CAE3C;AACD,GAHD;;AAKAxB,EAAAA,SAAS,GAAGgB,KAAK,CAACI,IAAlB;AAEAL,EAAAA,QAAQ,CAACC,KAAD,CAAR;AAEAlB,EAAAA,YAAY;AAEV,sBACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEO,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACE,IAAA,oBAAoB,EAAEkB,oBADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADF;AAQH;;AAED,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C;AAEA,SAAO;AACLP,IAAAA,IAAI,EAAEM;AADD,GAAP;AAGD,CAND;;AAQA,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO,CACL;AADK,GAAP;AAGD,CAJD;;AAMA,eAAelC,OAAO,CAAC8B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CN,WAA7C,CAAf","sourcesContent":["import React, {useEffect, useState}from 'react';\nimport './App.css';\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport ChatBanner from './ChatBanner';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { FreeBreakfastOutlined, Info } from '@material-ui/icons';\nimport { Typography } from '@material-ui/core';\nimport {RemoveScrollBar} from 'react-remove-scroll-bar';\nimport { connect } from 'react-redux'\n\nimport { Widget, addResponseMessage, toggleWidget } from 'react-chat-widget';\nimport 'react-chat-widget/lib/styles.css';\nimport styles from './Chat.css'; \n\nvar stateData;\nvar chatID;\nvar m = \"place\";\nvar pointer = 0;\nvar triggerN = \"\"\n\n\nconst theme = {\n    background: '#f5f8fb',\n    fontFamily: 'Helvetica Neue',\n    headerBgColor: '#000000',\n    headerFontColor: '#fff',\n    headerFontSize: '15px',\n    botBubbleColor: '#EF6C00',\n    botFontColor: '#fff',\n    userBubbleColor: '#fff',\n    userFontColor: '#4a4a4a',\n  };\n\nfunction loopThru(props){\n  chatID = props.id;\n  console.log(\"lebron\", props);\n  if(props.data[chatID] && pointer < props.data[chatID].length){\n    addResponseMessage(props.data[chatID][pointer].data)\n    pointer++\n    loopThru(props)\n  }\n}\n\nfunction ChatSection(props){\n\n  const handleNewUserMessage = (newMessage) => {\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n  };\n\n  stateData = props.data;\n\n  loopThru(props);\n\n  toggleWidget()\n  \n    return(\n      <ThemeProvider theme={theme}>\n          <Widget\n            handleNewUserMessage={handleNewUserMessage}\n          />\n      </ThemeProvider>\n  )\n  \n}\n\nconst mapStateToProps = (state, ownProps) => {\n  //let id = ownProps.match.params.post_id;\n  \n  return {\n    data: state\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    //deletePost: (id) => dispatch(deletePost(id))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatSection);\n"]},"metadata":{},"sourceType":"module"}