{"ast":null,"code":"var _jsxFileName = \"/Users/jatinkumar/Downloads/BonsaiChat/src/ChatSection.js\";\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport ChatBanner from './ChatBanner';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { FreeBreakfastOutlined, Info } from '@material-ui/icons';\nimport { Typography } from '@material-ui/core';\nimport styles from './Chat.css';\nimport { RemoveScrollBar } from 'react-remove-scroll-bar';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nvar stateData;\nvar chatID;\nvar m; //the Trigger\n\nfunction Loader(props) {\n  if (stateData != null && chatID != null) {\n    stateData[chatID].forEach(e => {//m = e.data;\n      //props.triggerNextStep({trigger: 'dynamicallyReachedStep'})\n    });\n  }\n}\n\nconst steps = [{\n  id: '1',\n  component: /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }\n  }),\n  waitAction: true\n}, {\n  id: 'message',\n  message: m\n}];\nconst theme = {\n  background: '#f5f8fb',\n  fontFamily: 'Helvetica Neue',\n  headerBgColor: '#000000',\n  headerFontColor: '#fff',\n  headerFontSize: '15px',\n  botBubbleColor: '#EF6C00',\n  botFontColor: '#fff',\n  userBubbleColor: '#fff',\n  userFontColor: '#4a4a4a'\n};\n\nfunction ChatSection(props) {\n  console.log(\"chatSection\", props);\n  stateData = props.state;\n  chatID = props.id;\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ChatBot, {\n    hideHeader: true,\n    steps: steps,\n    customStyle: {\n      backgroundColor: 'transparent',\n      'boxShadow': 'none'\n    },\n    contentStyle: {\n      height: this.props.height,\n      backgroundColor: 'transparent'\n    },\n    style: {\n      backgroundColor: 'transparent'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }));\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  //let id = ownProps.match.params.post_id;\n  return {\n    data: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {//deletePost: (id) => dispatch(deletePost(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatSection);","map":{"version":3,"sources":["/Users/jatinkumar/Downloads/BonsaiChat/src/ChatSection.js"],"names":["React","useEffect","useState","ChatBot","ThemeProvider","ChatBanner","InfoIcon","FreeBreakfastOutlined","Info","Typography","styles","RemoveScrollBar","connect","Redirect","stateData","chatID","m","Loader","props","forEach","e","steps","id","component","waitAction","message","theme","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","ChatSection","console","log","state","backgroundColor","height","mapStateToProps","ownProps","data","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAwC,OAAxC;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,qBAAT,EAAgCC,IAAhC,QAA4C,oBAA5C;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,SAAQC,eAAR,QAA8B,yBAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,IAAIC,SAAJ;AACA,IAAIC,MAAJ;AACA,IAAIC,CAAJ,C,CAEA;;AACA,SAASC,MAAT,CAAgBC,KAAhB,EAAsB;AAEpB,MAAGJ,SAAS,IAAI,IAAb,IAAqBC,MAAM,IAAI,IAAlC,EAAuC;AACrCD,IAAAA,SAAS,CAACC,MAAD,CAAT,CAAkBI,OAAlB,CAA0BC,CAAC,IAAI,CAC7B;AACA;AACD,KAHD;AAKD;AACF;;AAED,MAAMC,KAAK,GAAG,CACZ;AACEC,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,SAAS,eAAE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFb;AAGEC,EAAAA,UAAU,EAAE;AAHd,CADY,EAMZ;AACEF,EAAAA,EAAE,EAAE,SADN;AAEEG,EAAAA,OAAO,EAAET;AAFX,CANY,CAAd;AAYA,MAAMU,KAAK,GAAG;AACVC,EAAAA,UAAU,EAAE,SADF;AAEVC,EAAAA,UAAU,EAAE,gBAFF;AAGVC,EAAAA,aAAa,EAAE,SAHL;AAIVC,EAAAA,eAAe,EAAE,MAJP;AAKVC,EAAAA,cAAc,EAAE,MALN;AAMVC,EAAAA,cAAc,EAAE,SANN;AAOVC,EAAAA,YAAY,EAAE,MAPJ;AAQVC,EAAAA,eAAe,EAAE,MARP;AASVC,EAAAA,aAAa,EAAE;AATL,CAAd;;AAYA,SAASC,WAAT,CAAqBlB,KAArB,EAA2B;AACzBmB,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BpB,KAA3B;AACAJ,EAAAA,SAAS,GAAGI,KAAK,CAACqB,KAAlB;AACAxB,EAAAA,MAAM,GAAGG,KAAK,CAACI,EAAf;AACA,sBACI,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEI,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,UAAU,EAAE,IAArB;AAA2B,IAAA,KAAK,EAAEL,KAAlC;AAAyC,IAAA,WAAW,EAAE;AAACmB,MAAAA,eAAe,EAAC,aAAjB;AAAgC,mBAAa;AAA7C,KAAtD;AAA4G,IAAA,YAAY,EAAE;AAACC,MAAAA,MAAM,EAAE,KAAKvB,KAAL,CAAWuB,MAApB;AAA4BD,MAAAA,eAAe,EAAC;AAA5C,KAA1H;AAAwL,IAAA,KAAK,EAAE;AAACA,MAAAA,eAAe,EAAC;AAAjB,KAA/L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKD;;AAED,MAAME,eAAe,GAAG,CAACH,KAAD,EAAQI,QAAR,KAAqB;AAC3C;AACA,SAAO;AACLC,IAAAA,IAAI,EAAEL;AADD,GAAP;AAGD,CALD;;AAOA,MAAMM,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO,CACL;AADK,GAAP;AAGD,CAJD;;AAMA,eAAelC,OAAO,CAAC8B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CT,WAA7C,CAAf","sourcesContent":["import React, {useEffect, useState}from 'react';\nimport './App.css';\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport ChatBanner from './ChatBanner';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { FreeBreakfastOutlined, Info } from '@material-ui/icons';\nimport { Typography } from '@material-ui/core';\nimport styles from './Chat.css'; \nimport {RemoveScrollBar} from 'react-remove-scroll-bar';\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom';\n\nvar stateData;\nvar chatID;\nvar m;\n\n//the Trigger\nfunction Loader(props){\n\n  if(stateData != null && chatID != null){\n    stateData[chatID].forEach(e => {\n      //m = e.data;\n      //props.triggerNextStep({trigger: 'dynamicallyReachedStep'})\n    });\n    \n  }\n}\n\nconst steps = [\n  {\n    id: '1',\n    component: <Loader/>,\n    waitAction: true\n  },\n  {\n    id: 'message',\n    message: m,\n  }\n]\n\nconst theme = {\n    background: '#f5f8fb',\n    fontFamily: 'Helvetica Neue',\n    headerBgColor: '#000000',\n    headerFontColor: '#fff',\n    headerFontSize: '15px',\n    botBubbleColor: '#EF6C00',\n    botFontColor: '#fff',\n    userBubbleColor: '#fff',\n    userFontColor: '#4a4a4a',\n  };\n\nfunction ChatSection(props){\n  console.log(\"chatSection\", props);\n  stateData = props.state;\n  chatID = props.id;\n  return(\n      <ThemeProvider theme={theme}>\n          <ChatBot hideHeader={true} steps={steps} customStyle={{backgroundColor:'transparent', 'boxShadow': 'none'}} contentStyle={{height: this.props.height, backgroundColor:'transparent', }} style={{backgroundColor:'transparent'}} />\n      </ThemeProvider>\n  )\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  //let id = ownProps.match.params.post_id;\n  return {\n    data: state\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    //deletePost: (id) => dispatch(deletePost(id))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatSection);\n"]},"metadata":{},"sourceType":"module"}